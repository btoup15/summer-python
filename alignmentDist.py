import numpy as np

seq1 = "AACAGGTTTGGTCCTAGCCTTTCTATTAGCCCTTAGTGAGATTACACATGCAAGCATCCCCGCCCCAGTGAGTCGCCCTCCAAGCCACTCTGACTAAGAGGAACAAGCATCAAGCACGCAACAACGCAGCTCAAGACGCTTAGCCTAGCCACACCCCCACGGGAGACAGCAGTGACAAATCTTTAGCAATGAACGAAAGTTCAACTAAGCTACACTAGCCACAGGGCTGGTCAACTTCGTGCCAGCCACCGCGGTCACACGATTAGCCCAAGTTAATAGAGATCGGCGTAGAGAGTGTTTTAGATTTTTTTCCCCCCAATAAAGCTAAAATTTACCTGAGTTGTAGAAAACTTAAGTTAATACAAAATAAACTACGAAAGTGGCTTTAATATATCTGAACACACAATAGCTAAGACCCAAACTGGGATTAGATACCCCACTATGCTTAGCCCTAAACTTTAACAGTTGAATCAACAAAACTGCTCGCCAGAACACTACGAGCCACAGCTTAAAACTCAAAGGACCTGGCGGTGCTTCATACCCCCCTAGAGGAGCCTGTTCTGTAATCGATAAACCCCGATCAACCTCACCACCCCTTGCTCAGCCTATATACCGCCATCTTCAGCAAACCCTGATGAAGGCCACGAAGTAAGCGCAAACACCCACGTAAAGACGTTAGGTCAAGGTGTAGCCCATGGAGTGGCAAGAAATGGGCTACATTTTCTACTTCAGAAAACTACGATAACCCTCATGAAATTTGAAGGTCGAAGGTGGATTTAGCAGTAAACTAAGAGTAGAGTGCTTAGTTGAACAAGGCCCTGAAGCGCGTACACACCGCCCGTCACCCTCTTCAAGTATATTTCAGGGACTACCTAACTAAAACCCCCACGCATCTATATAGAAGAGGCAAGTCGTAACATGGTAAGCGTACTGGAAAGTGCGCTTGGACGAAC"
seq2 = "AATAGGTTTGGTCCTAGCCTTTCTATTAGCTCTTAGTAAGATTACACATGCAAGCATCCCCGTTCCAGTGAGTCACCCTCTAAATCACCACGATCAAAAGGGACAAGCATCAAGCACGCAACAATGCAGCTCAAAACGCTTAGCCTAGCCACACCCCCACGGGAAACAGCAGTGATAAACCTTTAGCAATAAACGAAAGTTTAACTAAGCTATACTAACCCCAGGGTTGGTCAATTTCGTGCCAGCCACCGCGGTCACACGATTAACCCAAGTCAATAGAAGCCGGCGTAAAGAGTGTTTTAGATCACCCCCTCCCCAATAAAGCTAAAACTCACCTGAGTTGTAAAAAACTCCAGTTGACACAAAATAAACTACGAAAGTGGCTTTAACATATCTGAATACACAATAGCTAAGACCCAAACTGGGATTAGATACCCCACTATGCTTAGCCCTAAACCTCAACAGTTAAATCAACAAAACTGCTCGCCAGAACACTACGAGCCACAGCTTAAAACTCAAAGGACCTGGCGGTGCTTCATATCCCTCTAGAGGAGCCTGTTCTGTAATCGATAAACCCCGATCAACCTCACCACCTCTTGCTCAGCCTATATACCGCCATCTTCAGCAAACCCTGATGAAGGCTACAAAGTAAGCGCAAGTACCCACGTAAAGACGTTAGGTCAAGGTGTAGCCCATGAGGTGGCAAGAAATGGGCTACATTTTCTACCCCAGAAAACTACGATAGCCCTTATGAAACTTAAGGGTCGAAGGTGGATTTAGCAGTAAACTGAGAGTAGAGTGCTTAGTTGAACAGGGCCCTGAAGCGCGTACACACCGCCCGTCACCCTCCTCAAGTATACTTCAAAGGACATTTAACTAAAACCCCTACGCATTTATATAGAGGAGACAAGTCGTAACATGGTAAGTGTACTGGAAAGTGCACTTGGACGAAC"
seq1s = []
seq2s = []
seq1s[:0] = seq1
seq2s[:0] = seq2
def compSeq(lst1,lst2):
    s = 0; v = 0; x = 0
    for i,j in zip(lst1,lst2):
        if i == j:
            pass
        elif i == 'A' and j == 'G':
            s += 1
        elif i == 'G' and j == 'A':
            s += 1
        elif i == 'C' and j == 'T':
            s += 1
        elif i == 'T' and j == 'C':
            s += 1
        elif i == 'T' and j == 'G' or 'A':
            v += 1
        elif i == 'C' and j == 'G' or 'A':
            v += 1
        elif i == 'A' and j == 'T' or 'C':
            v += 1
        elif i == 'G' and j == 'T' or 'C':
            v += 1
    return s,v

SV = list(compSeq(seq1s,seq2s))
S = SV[0] / len(seq1); V = SV[1] / len(seq1)
def D(sit, ver):
    d = ((-.5) * np.log(1 - (2 * sit) - ver)) - ((.25) * np.log(1 - (2 * ver)))
    return d

print(SV)
print(D(S,V))
